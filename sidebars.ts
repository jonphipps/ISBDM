import type {SidebarsConfig} from '@docusaurus/plugin-content-docs';

// This runs in Node.js - Don't use client-side code here (browser APIs, JSX...)

// sidebars.ts
// Docusaurus v3.7 sidebar configuration with custom Relationships leaves

import {
  agents,
  resources,
  placetimes,
  nomens,
} from './scripts/relationshipsSidebarLeaves';

const sidebars = {
  docs: [
    'intro/index', // Introduction (no children)
    'assess/index',  // Assessment (no children)
    {
      type: 'category',
      label: 'Elements',
      collapsed: false, // Expanded and can't be collapsed
      items: [
        {
          type: 'category',
          label: 'Statements',
          link: {
            type: 'doc',
            id: 'statements/index', // path relative to docs folder, without .mdx extension
          },
          items: [{ type: 'autogenerated', dirName: 'statements' }],
        },
        {
          type: 'category',
          label: 'Notes',
          link: {
            type: 'doc',
            id: 'notes/index', // path relative to docs folder, without .mdx extension
          },
          items: [{ type: 'autogenerated', dirName: 'notes' }],
        },
        {
          type: 'category',
          label: 'Attributes',
          link: {
            type: 'doc',
            id: 'attributes/index', // path relative to docs folder, without .mdx extension
          },
          items: [{ type: 'autogenerated', dirName: 'attributes' }],
        },
        {
          type: 'category',
          label: 'Relationships',
          collapsed: false, // Expanded and can't be collapsed
          collapsible: false, // Collapsible
          link: {
            type: 'doc',
            id: 'relationships/index', // path relative to docs folder, without .mdx extension
          },
          items: [
              'relationships/general',
              'relationships/1291',
            {
              type: 'category',
              label: 'Agent Entities',
              link: {
                type: 'doc',
                id: 'relationships/agents/index', // path relative to docs folder, without .mdx extension
              },
              items: [{ type: 'autogenerated', dirName: 'relationships/agents' }],
            },
            {
              type: 'category',
              label: 'Resource entities',
              link: {
                type: 'doc',
                id: 'relationships/resources/index', // path relative to docs folder, without .mdx extension
              },
              items: [{ type: 'autogenerated', dirName: 'relationships/resources' }],
            },
            {
              type: 'category',
              label: 'Place and time-span entities',
              link: {
                type: 'doc',
                id: 'relationships/placetimes/index', // path relative to docs folder, without .mdx extension
              },

              items: [{ type: 'autogenerated', dirName: 'relationships/placetimes' }],
            },
            {
              type: 'category',
              label: 'Nomens',
              link: {
                type: 'doc',
                id: 'relationships/nomens/index', // path relative to docs folder, without .mdx extension
              },
              items: [{ type: 'autogenerated', dirName: 'relationships/nomens' }],
            },
          ],
        },
      ],
    },
    {
      type: 'category',
      label: 'Values',
      collapsed: false, // Expanded and can't be collapsed
      items: [
        {
          type: 'category',
          label: 'Value Vocabularies',
          link: {
            type: 'doc',
            id: 'ves/index', // path relative to docs folder, without .mdx extension
          },
          items: [{ type: 'autogenerated', dirName: 'ves' }],
        },
        {
          type: 'category',
          label: 'String Encoding Schemes',
          link: {
            type: 'doc',
            id: 'ses/index', // path relative to docs folder, without .mdx extension
          },
          items: [{ type: 'autogenerated', dirName: 'ses' }],
        },
      ],
    },
    'glossary/index', // Glossary (no children)
    {
      type: 'category',
      label: 'Full Examples',
      link: {
        type: 'doc',
        id: 'fullex/index', // path relative to docs folder, without .mdx extension
      },
      items: [{ type: 'autogenerated', dirName: 'fullex' }],
    },
    'about/index', // About (no children)
    {
      type: 'category',
      label: 'Development Examples',
      link: {
        type: 'doc',
        id: 'examples/ElementReference', // path relative to docs folder, without .mdx extension
      },
      items: [{ type: 'autogenerated', dirName: 'examples' }],
    },
    {

    }
  ],
};

export default sidebars;
